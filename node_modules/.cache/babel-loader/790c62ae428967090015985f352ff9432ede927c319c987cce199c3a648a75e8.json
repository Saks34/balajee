{"ast":null,"code":"var _jsxFileName = \"D:\\\\balajee-khata\\\\client\\\\src\\\\components\\\\CustomerCreditForm.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport moment from 'moment';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CustomerCreditForm = () => {\n  _s();\n  const {\n    customerId\n  } = useParams();\n  const [amount, setAmount] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [message, setMessage] = useState('');\n  const navigate = useNavigate();\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!amount || isNaN(amount) || Number(amount) <= 0) {\n      setMessage('Please enter a valid amount');\n      return;\n    }\n    try {\n      setLoading(true);\n      setMessage('');\n      const token = localStorage.getItem('token');\n\n      // First create a Razorpay order\n      const orderRes = await axios.post('http://localhost:5000/api/payments/create-order', {\n        amount: Number(amount) * 100,\n        // Razorpay expects amount in paise\n        customerId\n      }, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      if (!orderRes.data.success) {\n        throw new Error(orderRes.data.message || 'Failed to create order');\n      }\n\n      // Initialize Razorpay payment\n      const options = {\n        key: process.env.REACT_APP_RAZORPAY_KEY_ID,\n        amount: Number(amount) * 100,\n        currency: 'INR',\n        name: 'Balajee Khata',\n        description: 'Payment',\n        order_id: orderRes.data.orderId,\n        handler: async function (response) {\n          try {\n            const verifyRes = await axios.post('http://localhost:5000/api/payments/verify', {\n              razorpay_order_id: response.razorpay_order_id,\n              razorpay_payment_id: response.razorpay_payment_id,\n              razorpay_signature: response.razorpay_signature,\n              customerId,\n              amount: parseFloat(amount),\n              date: moment().format('YYYY-MM-DD')\n            }, {\n              headers: {\n                Authorization: `Bearer ${token}`\n              }\n            });\n            if (verifyRes.data.success) {\n              if (verifyRes.data.receiptURL) {\n                window.open(verifyRes.data.receiptURL, '_blank');\n              }\n              navigate('/dashboard');\n            }\n          } catch (error) {\n            console.error(error);\n            setMessage('Payment verification failed');\n          }\n        },\n        prefill: {\n          name: 'Customer'\n        },\n        theme: {\n          color: '#007bff'\n        }\n      };\n      const rzp = new window.Razorpay(options);\n      rzp.open();\n    } catch (error) {\n      console.error(error);\n      setMessage(error.message || 'Error while processing payment');\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"credit-form\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Make Online Payment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Amount (\\u20B9):\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: amount,\n        onChange: e => setAmount(e.target.value),\n        placeholder: \"Enter amount\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: loading,\n        children: loading ? 'Processing...' : 'Pay Now'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 5\n  }, this);\n};\n_s(CustomerCreditForm, \"NSp7NZbOWGg4SWuDOIcCpUrQX24=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = CustomerCreditForm;\nexport default CustomerCreditForm;\nvar _c;\n$RefreshReg$(_c, \"CustomerCreditForm\");","map":{"version":3,"names":["React","useState","axios","moment","useNavigate","useParams","jsxDEV","_jsxDEV","CustomerCreditForm","_s","customerId","amount","setAmount","loading","setLoading","message","setMessage","navigate","handleSubmit","e","preventDefault","isNaN","Number","token","localStorage","getItem","orderRes","post","headers","Authorization","data","success","Error","options","key","process","env","REACT_APP_RAZORPAY_KEY_ID","currency","name","description","order_id","orderId","handler","response","verifyRes","razorpay_order_id","razorpay_payment_id","razorpay_signature","parseFloat","date","format","receiptURL","window","open","error","console","prefill","theme","color","rzp","Razorpay","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","target","placeholder","required","disabled","style","_c","$RefreshReg$"],"sources":["D:/balajee-khata/client/src/components/CustomerCreditForm.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport moment from 'moment';\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\n\r\nconst CustomerCreditForm = () => {\r\n  const { customerId } = useParams();\r\n  const [amount, setAmount] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n  const [message, setMessage] = useState('');\r\n  const navigate = useNavigate();\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    if (!amount || isNaN(amount) || Number(amount) <= 0) {\r\n      setMessage('Please enter a valid amount');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      setLoading(true);\r\n      setMessage('');\r\n      const token = localStorage.getItem('token');\r\n\r\n      // First create a Razorpay order\r\n      const orderRes = await axios.post(\r\n        'http://localhost:5000/api/payments/create-order',\r\n        {\r\n          amount: Number(amount) * 100, // Razorpay expects amount in paise\r\n          customerId\r\n        },\r\n        {\r\n          headers: { Authorization: `Bearer ${token}` }\r\n        }\r\n      );\r\n\r\n      if (!orderRes.data.success) {\r\n        throw new Error(orderRes.data.message || 'Failed to create order');\r\n      }\r\n\r\n      // Initialize Razorpay payment\r\n      const options = {\r\n        key: process.env.REACT_APP_RAZORPAY_KEY_ID,\r\n        amount: Number(amount) * 100,\r\n        currency: 'INR',\r\n        name: 'Balajee Khata',\r\n        description: 'Payment',\r\n        order_id: orderRes.data.orderId,\r\n        handler: async function (response) {\r\n          try {\r\n            const verifyRes = await axios.post(\r\n              'http://localhost:5000/api/payments/verify',\r\n              {\r\n                razorpay_order_id: response.razorpay_order_id,\r\n                razorpay_payment_id: response.razorpay_payment_id,\r\n                razorpay_signature: response.razorpay_signature,\r\n                customerId,\r\n                amount: parseFloat(amount),\r\n                date: moment().format('YYYY-MM-DD')\r\n              },\r\n              { headers: { Authorization: `Bearer ${token}` } }\r\n            );\r\n\r\n            if (verifyRes.data.success) {\r\n              if (verifyRes.data.receiptURL) {\r\n                window.open(verifyRes.data.receiptURL, '_blank');\r\n              }\r\n              navigate('/dashboard');\r\n            }\r\n          } catch (error) {\r\n            console.error(error);\r\n            setMessage('Payment verification failed');\r\n          }\r\n        },\r\n        prefill: {\r\n          name: 'Customer',\r\n        },\r\n        theme: {\r\n          color: '#007bff'\r\n        }\r\n      };\r\n\r\n      const rzp = new window.Razorpay(options);\r\n      rzp.open();\r\n\r\n    } catch (error) {\r\n      console.error(error);\r\n      setMessage(error.message || 'Error while processing payment');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"credit-form\">\r\n      <h2>Make Online Payment</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        <label>Amount (â‚¹):</label>\r\n        <input\r\n          type=\"number\"\r\n          value={amount}\r\n          onChange={(e) => setAmount(e.target.value)}\r\n          placeholder=\"Enter amount\"\r\n          required\r\n        />\r\n        <button type=\"submit\" disabled={loading}>\r\n          {loading ? 'Processing...' : 'Pay Now'}\r\n        </button>\r\n      </form>\r\n\r\n      {message && <p style={{ color: 'red' }}>{message}</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CustomerCreditForm;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}